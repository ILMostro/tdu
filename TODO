TODO

- Implement "human-readable" output.  Proposed keybindings:

	@h to use Kilobyte, etc. (powers of 1,000)
	@H to use Kibibyte, etc. (powers of 1,024)

  Cannot use h/H key since it already exists as one of the "vi" type
  keybindings.

- block count options.

  du options:
	-h	use unit suffixes:
		Byte, Kilobyte, Megabyte, Gigabyte, Terabyte, Petabyte
	-g	display block counts as 1073741824-byte blocks
	-k	display block counts as 1024-byte blocks
	-m	display block counts as 1048576-byte blocks

  df options:
	-b	512-byte blocks (default)
	-g	1073741824-byte blocks
	-H	human readable output, powers of 1000
	-h	human readable output, powers of 1024
	-k	1024-byte blocks
	-m	1048576-byte blocks
	-P	512-byte blocks (default)

  du and df also observe the BLOCKSIZE environment variable

- implement horizontal scrolling

- support the -0/--null option. [for GNU du's -0 option]
  [NOTE: this would also require a -0 option in dugroup(1).]

- sort by placing directories first but otherwise maintaining existing order

  NOTE: would assume user is running "du -a" and that a node with no children
  is not a directory (which is not always the case).

- keybinding to show current node at *top* of screen

MAYBE

- $HOME/.tdurc config file to control keybindings and other interface aspects

TODO for C version

- use long long instead of long for specifying sizes where possible.
  [not needed for Perl version]

- use unsigned types to specify the sizes.  use a flag where you would
  specify -1 for the size.
  [not needed for Perl version]

- different levels of verbosity, specified by -v with optional numeric
  arg, -q is equiv. to -v0
  [not applicable to Perl version]

- someday use isdupath to collapse unnecessary levels
  [eh?  I don't remember what I mean by this.]

- turn off smooth scroll if scrolling more than 1-2 lines??

